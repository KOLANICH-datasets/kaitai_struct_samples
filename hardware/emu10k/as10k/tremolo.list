                                                   ||   ;;; Tremolo Effect 
                                                   ||   ;;; By:	 Daniel Bertrand
                                                   ||   ;;; Oct 29, 2000
                                                   ||   
including file                                     ||   	include "emu_constants.asm"
                                                   ||   ;some hardware constants C_[n]<DecimalValue>, 'n' indicates negative value
                                                   ||   ;		
                                                   ||   ;these are in 2's complement representation
                                                   ||    
                                                   ||   C_0	equ $040	;;00000000
                                                   ||   C_1	equ $041	;;00000001
                                                   ||   C_2	equ $042	;;00000002
                                                   ||   C_3	equ $043	;;00000003
                                                   ||   C_4	equ $044	;;00000004	
                                                   ||   C_8	equ $045	;;00000008
                                                   ||   C_16	equ $046	;;00000010
                                                   ||   C_32	equ $047	;;00000020
                                                   ||   C_256	equ $048	;;00000100
                                                   ||   C_65536 equ $049	;;00010000
                                                   ||   C_2^23 	equ $04A	;;00080000
                                                   ||   C_2^28	equ $04b	;;10000000
                                                   ||   C_2^29	equ $04c	;;20000000 (C_max /4) +1
                                                   ||   C_2^30	equ $04d	;;40000000 ( C_max / 2 ) + 1 (almost half)	
                                                   ||   C_nmax	equ $04e	;;80000000 most negative number
                                                   ||   C_max	equ $04f	;;7fffffff most positive number	
                                                   ||   C_n1	equ $050	;;ffffffff -1
                                                   ||   C_n2	equ $051	;;fffffffe -2
                                                   ||   C_n2^30	equ $052	;;c0000000 C_nmax /2
                                                   ||   
                                                   ||   C_LSshift equ $55	;;to left shift an address by using macsints
                                                   ||   			;;for fractional addresses
                                                   ||   
                                                   ||   
                                                   ||   ZERO equ C_0;
                                                   ||   ONE equ	C_1;
                                                   ||   	
                                                   ||   ;;; Hardware Registers:	
                                                   ||   		
                                                   ||   ACCUM	equ $56
                                                   ||   CCR	equ $57	
                                                   ||   NOISE1	equ $58
                                                   ||   NOISE2	equ $59	
                                                   ||   IRQ	equ $5A	
                                                   ||   DBAC	equ $5B	
                                                   ||   	
                                                   ||   and	macro	dest,srcA,srcB
                                                   ||   	andxor	dest,srcA,srcB,C_0
                                                   ||   	endm
                                                   ||   	
                                                   ||   xor	macro   dest,srcA,srcB
                                                   ||   	andxor	dest,C_n1,srcA,srcB
                                                   ||   	endm
                                                   ||   	
                                                   ||   not	macro	 dest,src
                                                   ||   	andxor   dest,src,C_n1,C_n1		
                                                   ||   	endm
                                                   ||   
                                                   ||   nand	macro	dest,srcA,srcB	
                                                   ||   	andxor	dest,srcA,srcB,C_n1
                                                   ||   	endm
                                                   ||   	
                                                   ||   or	macro	 dest,srcA,srcB
                                                   ||   	not	 C_0,srcA
                                                   ||   	andxor	 dest,ACCUM,srcA,srcB	
                                                   ||   	endm	
                                                   ||   
                                                   ||   nor	macro	dest,srcA,scrB
                                                   ||   	not	dest,srcA
                                                   ||   	andxor	dest,srcB,dest,srcA	
                                                   ||   	not	dest,dest
                                                   ||   	endm
                                                   ||   
                                                   ||   
                                                   ||   neg     macro   dest,src
                                                   ||   	macs1   dest,C_0,C_1,C_nmax 	
                                                   ||   	endm	
                                                   ||   	
                                                   ||   ;;; branch on:
                                                   ||   ;;; ==0
                                                   ||   beq	macro   count
                                                   ||   	skip	CCR,CCR,C_8,count	
                                                   ||   	endm
                                                   ||   ;;; !=0
                                                   ||   bne	macro	count
                                                   ||   	skip	CCR,CCR,C_256,count
                                                   ||   	endm
                                                   ||   ;;; <0
                                                   ||   blt	macro	count
                                                   ||   	skip	CCR,CCR,C_4,count
                                                   ||   	endm
                                                   ||   ;;; always branch
                                                   ||   bra	macro	count
                                                   ||   	skip	C_0,C_max,C_max,count
                                                   ||   	endm
                                                   ||   ;;; on saturation
                                                   ||   bsa     macro count
                                                   ||   	skip CCR,CCR,C_16,count
                                                   ||   	endm
                                                   ||   bge	macro  count
                                                   ||   C___80	con $80
                                                   ||   	skip CCR,CCR,C___80,count	
                                                   ||   	endm
                                                   ||   		
                                                   ||   bgt	macro	count
                                                   ||   C___180	con $180
                                                   ||   	skip CCR,CCR,C___180,count
                                                   ||   	endm
                                                   ||   	
                                                   ||   move	macro dest,src
                                                   ||   	macs  dest,src,C_0,C_0
                                                   ||   	endm	 	
                                                   ||   	
Exiting included file                              ||   	end
                                                   ||   	name "tremolo"
                                                   ||   
                                                   ||   in	IO
                                                   ||   out	equ	in
                                                   ||   	
                                                   ||   	
                                                   ||   ;;; sinewave generator:
                                                   ||   delta control 10e-4,0,1e-2 ; controls frequency (2*pi*freq/48000)
                                                   ||   cosx sta #0.5		 
                                                   ||   sinx sta 0		
                                                   ||   depth control &0.001,0,&0.001
                                                   ||   
                                                   ||   
                                                   ||   tmp  dyn	
                                                   ||   	
                                                   ||   delay	delay	&0.01
                                                   ||   wrt	twrite	delay,0
                                                   ||   rd	tread	delay,0	
                                                   ||   rd2	tread	delay,0
                                                   ||   c1000	sta	$1000
                                                   ||   	
0x000   MACS     (00)   0x200,0x100,0x040,0x040    ||   	macs	wrt,in,C_0,C_0
                                                   ||   ;;; sinwave generator:	
0x002   MACS     (00)   0x104,0x104,0x102,0x103    ||   	macs  sinx,sinx,delta,cosx       
0x004   MACS1    (01)   0x103,0x103,0x102,0x104    ||   	macs1 cosx,cosx,delta,sinx 
                                                   ||   
                                                   ||   ;;; calulate address = depth*sin(wt)+0.5*depth
                                                   ||   	
                                                   ||   	
0x006   MACS     (00)   0x106,0x107,0x105,0x04d    ||   	macs tmp,c1000,depth,C_2^30
0x008   MACS     (00)   0x106,0x106,0x104,0x105    ||   	macs tmp,tmp,sinx,depth
0x00a   ACC3     (06)   0x301,0x106,0x040,0x300    ||   	acc3 rd.a,tmp,C_0,wrt.a	
                                                   ||   	
0x00c   MACINTS  (04)   0x302,0x301,0x045,0x048    ||   	macints rd2.a,rd.a,C_8,C_256  ;;;next address 
                                                   ||   	
                                                   ||   ;;; get fractional address:	
0x00e   MACINTS  (04)   0x106,0x040,0x301,0x055    ||   	macints tmp,C_0,rd.a,C_LSshift
                                                   ||   ;;; linear interpolate fraction between the 2 reads
                                                   ||   ;;; output result	
                                                   ||   	
                                                   ||   			
0x010   INTERP   (14)   0x101,0x201,0x106,0x202    ||   	interp  out,rd,tmp,rd2
                                                   ||   
                                                   ||   	
                                                   ||   	end
Summary:
Patch name: "tremolo"

*****************************GPR******************************
in IN: 0x100, OUT: 0x101
GPR Dynamic:  0x106(tmp)
GPR Static:  0x103(cosx), Value:0x3fffffff
GPR Static:  0x104(sinx), Value:0x00000000
GPR Static:  0x107(c1000), Value:0x00001000
GPR Control: 0x102(delta), value:0x0020c49b, Min:0x00000000, Max:0x0147ae14
GPR Control: 0x105(depth), value:0x00018000, Min:0x00000000, Max:0x00018000
*****************************TRAM*****************************
Delay-line block:delay, size:0x000001e1
	Read: 0x301/0x201 (rd), offset 0x0000000
	Read: 0x302/0x202 (rd2), offset 0x0000000
	Write: 0x300/0x200 (wrt), offset 0x0000000
